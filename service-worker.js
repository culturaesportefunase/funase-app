const CACHE_NAME='funase-app-v1.3';const PRECACHE_URLS=['/','/index.html','/style.css','/manifest.json','/offline.html','/icons/icon-192x192.png','/icons/icon-512x512.png'];self.addEventListener('install',e=>{e.waitUntil((async()=>{const c=await caches.open(CACHE_NAME);for(const u of PRECACHE_URLS){try{const r=await fetch(u,{cache:'no-cache'});if(r&&r.ok)await c.put(u,r.clone());}catch(_){}}self.skipWaiting();})())});self.addEventListener('activate',e=>{e.waitUntil((async()=>{const keys=await caches.keys();await Promise.all(keys.map(k=>k!==CACHE_NAME?caches.delete(k):null));await self.clients.claim();})())});self.addEventListener('fetch',e=>{const req=e.request;if(req.mode==='navigate'||req.destination==='document'){e.respondWith((async()=>{try{return await fetch(req);}catch(e){return(await caches.match('/offline.html'))||new Response('Offline',{status:503});}})());return;}e.respondWith((async()=>{const cached=await caches.match(req);if(cached)return cached;try{const net=await fetch(req);if(req.method==='GET'&&net&&net.ok&&net.type==='basic'){caches.open(CACHE_NAME).then(c=>c.put(req,net.clone()));}return net;}catch(e){const fb=await caches.match(req);if(fb)return fb;throw e;}})());});